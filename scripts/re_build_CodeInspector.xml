<project name='CodeInspector' basedir='..'>

	<property name='component' value='CodeInspector' />
	<property name='system_id' value='### Must be set by Jenkins ###' />

	<property name='app.name' value='${component}' />
	<property name='inputDir' value='${basedir}/${app.name}/Documentation' />
	<property name='language' value='### Must be set by Jenkins ###' />

	<property environment='env' />
	<import file='${env.RE_ANTLIBRARY_HOME}/ant-lib.xml' />


	<target name='Component.CodeInspector.init.custom' extensionOf='Component.init.custom'>

		<!-- - CMake generates makefiles here -->
		<property name='build.dir' value='${checkout_directory}${file.separator}${component}${file.separator}build' />

	</target>

	<target name='Component.CodeInspector.prebuild' extensionOf='Component.prebuild'>

		<delete dir='${build.dir}' />
		<mkdir dir='${build.dir}' />
	</target>

	<!--
		Component (platform-independent)
	-->

	<target name='Component.CodeInspector.execute' extensionOf='Component.execute'>

		<re-cmake-exec dir="${build.dir}">
			<arg line='-G &quot;${env.CMAKE_GENERATOR}&quot;' />
			<arg line='-DWOLFRAMKERNEL=${mathExe}' />  
			<arg line='-DBUILDNUMBER=${env.BUILD_NUMBER}' />
			<arg value='${checkout_directory}/${component}' /> 
		</re-cmake-exec> 

		<re-cmake-exec dir="${build.dir}">
			<arg line='--build .' /> 
			<arg line='--target paclet' /> 
		</re-cmake-exec> 
		
		<mkdir dir='${files_directory}/${component}' />
		<copy todir='${files_directory}/${component}'>
			<fileset dir='${build.dir}${file.separator}paclet${file.separator}${component}' />
		</copy>

	</target>
	
	<!--
			Paclet generation
	-->
	
	<target name='Paclet.CodeInspector.init.custom' extensionOf='Paclet.init.custom'>
	
		<!--
			Prevent Paclet.clean from deleting files_directory,
			since CopyAndUnarchiveArtifact just put all the paclet
			files in there....
		-->

		<property name='keep.files_directory' value='true' />
	
	</target>
	
	<target name='Paclet.CodeInspector.execute' extensionOf='Paclet.execute'>
		<mathematica exe="${mathExe}" fresh="true" quit="true"><![CDATA[

			Print["$Version: ", $Version];
			Print["$InstallationDirectory: ", $InstallationDirectory];

			Unset[$MessagePrePrint];
			Needs["PacletManager`"];

			src = FileNameJoin[{AntProperty["files_directory"], "CodeInspector"}];
			dest = FileNameJoin[AntProperty["files_directory"]];
			PackPaclet[src, dest];

			SetDirectory[dest]
			If [TrueQ[FileExistsQ[FileNames["CodeInspector*.paclet"][[1]]]],
				Print[FileNames["CodeInspector*.paclet"][[1]] " ... OK"],
				AntFail["Paclet not produced" ]];

		]]></mathematica>

	</target>
	
    <!--
            Paclet deployment
    -->
	
	<target name='Deploy.CodeInspector.execute' extensionOf='Deploy.execute'>
	
		<path id='file.id'> 
			<fileset dir='${checkout_directory}'>
				<include name="CodeInspector*.paclet"/>
			</fileset>
		</path>

		<property name='paclet_file' refid='file.id'/> 
		<property name='src' value='${paclet_file}' />
		<property name='host' value='buildmgr@paclet-int.wolfram.com' />
		<property name='dest' value='/mnt/paclets/to-deploy/internal' />
		
		<condition property='scp.cmd' value='pscp' else='scp'>
			<os family='windows'/>
		</condition>
		
		<condition property='args' value='-batch -q -r' else='-Br'>
			<os family='windows'/>
		</condition>
		
		<echo message="copy ${src} to ${host}:${dest}" />
		<exec executable='${scp.cmd}' failonerror='true' searchpath='true'>
			<arg line='${args} ${src} ${host}:${dest}' />
		</exec>
	</target>

</project>